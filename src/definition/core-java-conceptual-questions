
https://github.com/mgkhaleque/MidTermFall18.git

Please answer the below core-java Questions:

What is programing language?
A.Programming language is a set of commands, instructions, and other syntax use to create a software program. Languages that programmers use to write source code are called "high-level languages." This code can be compiled into a "low-level language," or binary codes which is recognized directly by the computer hardware.


What jdk contains or composed of and define each components?
A.The Java Development Kit (JDK) is a software development environment used for developing Java applications and applets which includes following main components:


What is IDE?
A.An integrated development environment (IDE) is a software application that provides comprehensive facilities to computer programmers for software development. An IDE normally consists of a source code editor, build automation tools, and a debugger. Most modern IDEs have intelligent code completion

What are the IDEs available in the market to support java?
Followings are the available IDE in the market to support Java: 
NetBeans, Eclipse, IntelliJ, Android Studio, Enide Studio 2014, BlueJ, jEdit, 	


Explain the entire java life cycle.
There are three main stages in the life cycle of a java program. They are:
•	Editing the program
•	Compiling the source code
•	Executing the byte code
First, typing & save the program in a text-editor with .java extension.

Second step is compilation. The input to the Java compiler (javac) is Java source code and the output of the compiler is machine independent or platform independent code which is known as bytecode. The file which is generated after compilation is .class file. 

Last step is execution. 
The bytecode generated by the compiler will be executed by Java Virtual Machine (JVM). Input to the JVM is bytecode and output is machine code (0’s and 1’s) which will be executed by the CPU of the local machine.


what is class?
A class is a user defined blueprint or prototype from which objects are created
Class defined object data types and methods.
A class is defined by using keyword class followed by the name of class. The body of class is defined inside the curly braces


What is object?
Objects are created from templates known as classes or we can say Object is the reflection of class.
A Java object is a combination of data and procedures working on the available data. The state of an object is stored in fields (variables), while methods (functions) display the object's behavior.  In Java, an object is created using the keyword "new".

What is the entry point of an application?
The main method is the entry point of a Java application. 
Specifically、when the Java Virtual Machine is told to run an application by specifying its class (by using the java application launcher), it will look for the main method with the signature of public static void main(String[])before any objects are made

Why main is static?
The method is static because otherwise there would be ambiguity: which constructor should be called? Especially if your class looks like this:
public class JavaClass{
  protected JavaClass(int x){}
  public void main(String[] args){
  }
}
Should the JVM call new JavaClass(int)? What should it pass for x?
If not, should the JVM instantiate JavaClass without running any constructor method? I think it shouldn't, because that will special-case your entire class - sometimes you have an instance that hasn't been initialized, and you have to check for it in every method that could be called.
There are just too many edge cases and ambiguities for it to make sense for the JVM to have to instantiate a class before the entry point is called. That's why main is static.



Which class is the superclass of all classes?
The Object class, which is stored in the java.lang package, is the ultimate superclass of all Java classes as every other Java classes descends from Object.

What is difference between path and classpath variables?
1)Path is an environment variable which is used by the operating system to find the executables. 
Classpath is an environment variable which is used by the Javacompiler to find the path, of classes.

2).PATH is nothing but setting up an environment for operating system. Operating System will look in this PATH for executables.  Classpath is nothing but setting up the environment for Java. Java will use to find compiled classes  3).Path refers to the system while classpath refers to the Developing Envornment.  In path we set the path of executables while in classpath we set path of jars for compiling classes.


What is the difference between an Interface and Abstract class?
The interface is a blueprint that can be used to implement a class. 

The interface does not contain any concrete methods (methods that have code). Methods of a Java interface are implicitly abstract and cannot have implementations.
However, classes that implement interfaces can be instantiated.

Interfaces are used to define contract for the subclasses whereas abstract class also define contract but it can provide other methods implementations for subclasses to use.
Abstract class can have abstract and non-abstract methods. From Java 8, it can have default and static methods also. An abstract class may contain non-final variables. But the variables declared in a Java interface are by default final.


Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
No, we cannot create an instance of an abstract class. ... Because an abstract class is an incomplete class(it contains abstract methods without body and output). 
we cannot create an instance or object; the same way we can say for an interface.

There are two ways we can achieve this.
1) Either you extend / implement the Abstract class / interface in a new class, create the object of this new class and then use this object as per your need.
2) The Compiler allows you to create anonymous objects of the interfaces in your code.
For eg. ( new Runnable() { ... } );


what is Access Specifier?
Access modifiers (or access specifiers) are keywords in object-oriented languages that set the accessibility of classes, methods, and other members. 

In Java, according to their restrictiveness order, methods and data members of a class/interface can have one of the following four access specifiers:
1) private 2) default (when no access specifier is specified) 3) protected 4) public
But, the classes and interfaces themselves can have only two access specifiers when declared outside any other class. 1) public 2) default (when no access specifier is specified)
We cannot declare class/interface with private or protected access specifiers. 


What is OOP ? Define each feature of java OOP.
OOP concepts in Java are the main ideas behind Java’s Object Oriented Programming. They are an Abstraction, Encapsulation, Inheritance
and Polymorphism.
 
•	Abstraction. Abstraction means using simple things to represent complexity. We all know how to turn the TV on, but we don’t need to know how it works in order to enjoy it. In Java, abstraction means simple things like objects, classes, and variables represent more complex underlying code and data. This is important because it lets avoid repeating the same work multiple times.
•	Encapsulation. This is the practice of keeping fields within a class private, then providing access to them via public methods. It’s a protective barrier that keeps the data and code safe within the class itself. This way, we can re-use objects like code components or variables without allowing open access to the data system-wide.
•	Inheritance. This is a special feature of Object Oriented Programming in Java. It lets programmers create new classes that share some of the attributes of existing classes. This lets us build on previous work without reinventing the wheel.
•	Polymorphism. This Java OOP concept lets programmers use the same word to mean different things in different contexts. One form of polymorphism in Java is method overloading. That’s when different meanings are implied by the code itself. The other form is method overriding. That’s when the different meanings are implied by the values of the supplied variables. See more on this below.


What is Java Package and which package is imported by default?

Package in Java is a mechanism to encapsulate a group of classes, sub packages and interfaces. Packages are used for:

Preventing naming conflicts. For example there can be two classes with name Employee in two packages, college.staff.cse.Employee and college.staff.ee.Employee
Making searching/locating and usage of classes, interfaces, enumerations and annotations easier
Providing controlled access: protected and default have package level access control. A protected member is accessible by classes in the same package and its subclasses. A default member (without any access specifier) is accessible by classes in the same package only.
Packages can be considered as data encapsulation (or data-hiding).


3 packages are imported by default for each source file. First, the package with no name. Second, the java.lang package. And third, the current package (the package in which the current file is defined).

What is API? Name list of API that you have used so far.
An application programming interface (API) is a particular set of rules ('code') and specifications that software programs can follow to communicate with each other. It serves as an interface between different software programs and facilitates their interaction, similar to the way the user interface facilitates interaction between humans and computers.


Does java support multiple inheritance, explain why or why not?
Java doenot support multiple inheritance. suppose c is the child class extending from both parent class a and parent class b with some methods defined in them. Then child class cannot understand which class method to call. so there is a confusion here which leads to ambiguity and leads to compile time error.This is the reason java doesnot support multiple inheritance

What is method overloading and when it happens?
Method Overloading is a feature that allows a class to have more than one method having the same name, if their argument lists are different.

Explain exceptions in java and how to handle it.
An exception is an unwanted or unexpected event, which occurs during the execution of a program i.e at run time, that disrupts the normal flow of the program’s instructions.

Java exception handling is managed via five keywords: try, catch, throw, throws, and finally. Briefly, here is how they work. Program statements that you think can raise exceptions are contained within a try block. If an exception occurs within the try block, it is thrown.code can catch this exception (using catch block) and handle it in some rational manner. System-generated exceptions are automatically thrown by the Java run-time system. To manually throw an exception, use the keyword throw. Any exception that is thrown out of a method must be specified as such by a throws clause. Any code that absolutely must be executed after a try block completes is put in a finally block.

What is static keyword in java? How it has been used in variables and methods ?

The static keyword is used in java mainly for memory management. It is used with variables, methods, blocks and nested class. It is a keyword that are used for share the same variable or method of a given class. This is used for a constant variable or a method that is the same for every instance of a class. The main method of a class is generally labeled static.

In Java, a static member is a member of a class that isn't associated with an instance of a class. Instead, the member belongs to the class itself. As a result, we can access the static member without first creating a class instance.

Syntax for declare static variable:
public static variableName;

Syntax for declare static method:
public static  void methodName()
{
.......
.......
}

What is final and how it has been used variables and methods?
Final is a non-access modifier applicable only to a variable, a method or a class.

Following are different contexts where final is used.
Final variable - to create constant variable
Final method - Prevent method overriding
Final Class - Prevent Inheritance


What is final, finally and finalize?
A final class cannot be instantiated, a final method cannot be overridden and a final variable cannot be reassigned. 
The finally keyword is used to create a block of code that follows a try block. 
The finalize() method is used just before object is destroyed and can be called just prior to object creation.

What is a constructor ?
Constructor method of a class has the same name as that of the class, they are called or invoked when an object of a class is created and can't be called explicitly.

Can we have multiple constructors in a class?
A class can have multiple constructors, as long as their signature (the parameters they take) are not the same.

If we don't have a constructor declared, what is called during the object creation?
Default Constructor.
If we don't explicitly declare a constructor in a class, the Java compiler will create a default constructor on the fly, then translate that default constructor into a corresponding instance initialization method.

What is "this" keyword in java ?
Keyword THIS is a reference variable in Java that refers to the current object. 
It can be used to refer instance variable of current class. It can be used to invoke or initiate current class constructor. It can be passed as an argument in the method call.

What is "super" keyword in java? How many possible way can you use?
super is a keyword. 
It is used inside a sub-class method definition to call a method defined in the super class. Private methods of the super-class cannot be called. Only public and protected methods can be called by the super keyword. 
It is also used by class constructors to invoke constructors of its parent class.
Super keyword are not used in static Method.

What is JVM stand for ?
Java virtual machine.

Is JVM platform independent?
No, JVMs are not platform independent.
The JVM must be platform dependent to allow your Java to run on the specific platform.

What version of java are you using?
Java version 8.

What is JAR stand for ?
A JAR (Java ARchive) is a package file format typically used to aggregate many Java class files and associated metadata and resources (text, images, etc.) into one file for distribution.

What is the difference between JDK and JVM?
What is the difference between JVM and JRE?

(A combined answer for both the above questions)

First:
JDK = JRE + Development Tools.
JRE = JVM + Library Classes.

JDK – Java Development Kit (in short JDK) is Kit which provides the environment to develop and execute(run) the Java program. JDK is a kit(or package) which includes two things
Development Tools(to provide an environment to develop your java programs)
JRE (to execute your java program).
Note : JDK is only used by Java Developers.

JRE – Java Runtime Environment (to say JRE) is an installation package which provides environment to only run(not develop) the java program(or application)onto your machine. JRE is only used by them who only wants to run the Java Programs i.e. end users of your system.
JVM – Java Virtual machine(JVM) is a very important part of both JDK and JRE because it is contained or inbuilt in both. Whatever Java program you run using JRE or JDK goes into JVM and JVM is responsible for executing the java program line by line hence it is also known as interpreter.






What is compile time and run time?
Runtime and compile time are programming terms that refer to different stages of software program development. 

In order to create a program, a developer first writes source code, which defines how the program will function. The volume of source code depends on the size of respective program.However, The source code must be compiled into machine code in order to become and executable program. This compilation process is referred to as compile time.

A compiled program can be opened and run by a user. When an application is running, it is called runtime.

If a program's source code has already been compiled into an executable program, it may still have bugs that occur while the program is running. Examples include features that don't work, unexpected program behavior, or program crashes. These types of problems are called runtime errors since they occur at runtime.

What is heap?
The Java virtual machine has a heap that is shared among all Java virtual machine threads. The heap is the runtime data area from which memory for all class instances and arrays is allocated.

How java manage it's memory?
The JVM loads the code, verifies the code, executes the code, manages memory (this includes allocating memory from the Operating System (OS), managing Java allocation including heap compaction and removal of garbage objects) and finally provides the runtime environment.


What is the difference between String, StringBuffer and StringBuilder?
String:
String is immutable ( once created can not be changed )object . The object created as a
String is stored in the Constant String Pool.
Every immutable object in Java is thread safe ,that implies String is also thread safe . String can not be used by two threads simultaneously.String once assigned can not be changed.

StringBuffer:
StringBuffer is mutable means one can change the value of the object . The object created
through StringBuffer is stored in the heap. StringBuffer has the same methods as the
StringBuilder , but each method in StringBuffer is synchronized that is StringBuffer is thread safe.
Due to this it does not allow two threads to simultaneously access the same method . Each
method can be accessed by one thread at a time .
But being thread safe has disadvantages too as the performance of the StringBuffer hits due to thread safe property.Thus StringBuilder is faster than the StringBuffer when calling the same methods of each class.
String Buffer can be converted to the string by using toString() method.
StringBuffer demo1 = new StringBuffer("Hello") ;
// The above object stored in heap and its value can be changed .
demo1=new StringBuffer("Bye");
// Above statement is right as it modifies the value which is allowed in the StringBuffer

StringBuilder:
StringBuilder is same as the StringBuffer,that is it stores the object in heap and it can also. be modified.The main difference between the StringBuffer and StringBuilder is
that StringBuilder is also not thread safe.
StringBuilder is fast as it is not thread safe.

StringBuilder demo2= new StringBuilder("Hello");
// The above object too is stored in the heap and its value can be modified
demo2=new StringBuilder("Bye");
// Above statement is right as it modifies the value which is allowed in the StringBuilder


What is Singleton class?
In object-oriented programming, a singleton class is a class that can have only one object (an instance of the class) at a time. 
In order to design a singleton class: Make constructor as private. Write a static method that has return type object of this singleton class.


What is Serialization and Deserialization?
Serialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. 
The reverse process of creating object from sequence of bytes is called deserialization.


when to use transient variable in java?
Transient key word is a variables modifier used in serialization. 
At the time of serialization, if we don't want to save value of a particular variable in a file, then we use transient keyword.

Difference between while and do..while loop?
In Java While loop, condition is tested at the beginning of the loop and if the condition is True then only statements in that loop will be executed. ... In Java Do While loop, condition is tested at the end of the loop so Do While executes the statements in the code block at least once even if the condition Fails.


What is Enum?
A Java enum (Enumeration) type is a special kind of Java class serves the purpose of representing a group of named constants in a programming language.
enum can declare multiple pre-defined, Constant data which Class or Interface can not do.

What is Iterator?
An iterator is an object that enables a programmer to traverse a container, particularly lists.

Which one will take more memory, an int or Integer?
Both taking the same amount of memory in the heap although int (primitive type variable)with a size of 4 bytes and Integer (reference type) having size of 16 bytes.

Why is String Immutable in Java?
Basically following 2 reasons are widely considered for String's being Immutable.
String Constant Pool:If string is mutable, changing the string with one reference will lead to the wrong value for the other references.

Security:String is widely used as parameter for many java classes, e.g. network connection, opening files, etc. Were String not immutable, a connection or file would be changed and lead to serious security threat.


What is constructor chaining in Java?
Constructor chaining is the process of calling one constructor from another constructor with respect to current object.

The difference between Serial and Parallel Garbage Collector?
Both the serial and parallel collectors cause a stop-the-world during the GC.
But a serial collector is a default copying collector which uses only one GC thread for the GC operation, while a parallel collector uses multiple GC threads for the GC operation.

What is JIT stands for?
The JIT compiler is enabled by default, and is activated when a Java method is called. The JIT compiler compiles the bytecodes of that method into native machine code, compiling it "just in time" to run. When a method has been compiled, the JVM calls the compiled code of that method directly instead of interpreting it.


Explain Java Heap space and Garbage collection?
Java objects reside in an area called the heap. The heap is created when the JVM starts up and may increase or decrease in size while the application runs. When the heap becomes full, garbage is collected. During the garbage collection objects that are no longer used are cleared, thus making space for new objects.

Can you guarantee the garbage collection process?
System.gc() and Runtime.gc() are hooks to request the JVM to initiate the garbage collection process. ... It can choose to reject the request and so it is not guaranteed that these calls will do the garbage collection. This decision is taken by the JVM based on the eden space availability in heap memory.

What is the difference between stack and heap in Java?
Heap memory is used by all the parts of the application whereas stack memory is used only by one thread of execution. Whenever an object is created, it's always stored in the Heap space and stack memory contains the reference to it.

What is reflection in java and why is it useful?
Reflection in Java is the ability to examine and/or modify the properties or behavior of an object at run-time. Reflection makes it possible to inspect classes, fields and methods at runtime, without knowing the names of the classes, methods etc. at compile time.

what is multithreading in java?
The main purpose of multithreading is to provide simultaneous execution of two or more parts of a program to maximum utilize the CPU time.
A multithreaded program contains two or more parts that can run concurrently. Each such part of a program called thread.

A thread can be in one of the following states:
NEW – A thread that has not yet started is in this state.
RUNNABLE – A thread executing in the Java virtual machine is in this state.
BLOCKED – A thread that is blocked waiting for a monitor lock is in this state.
WAITING – A thread that is waiting indefinitely for another thread to perform a particular action is in this state.
TIMED_WAITING – A thread that is waiting for another thread to perform an action for up to a specified waiting time is in this state.
TERMINATED – A thread that has exited is in this state.
A thread can be in only one state at a given point in time.

 

What is the use of synchronization in Java?
With respect to multithreading, synchronization is the capability to control the access of multiple threads to shared resources. Without synchronization, it is possible for one thread to modify a shared object while another thread is in the process of using or updating that object's value. This often leads to significant errors.

What is Framework?
Frameworks are large bodies (usually many classes) of pre-written code to which we can add our own code in order to solve a problem in a specific domain. 
Perhaps we could say that the framework uses our code because it is usually the framework that is in control. Make use of a framework by calling its methods, inheritance, and supplying "callbacks", listeners, or other implementations of the Observer pattern.

What are the testing Framework available in java?
Followings are the most available and useful testing tools for Java Developers:

1. JUnit
2. REST Assured
3. Selenium
4. TestNG
5. Mockito
6. Spock Framework
7. Cucumber
8. Spring Test
9. DBUnit
10. Robot Framework

Difference between jUnit and testNG?
Both of them are used for Unit Testing and similar on the surface in terms of having identical features e.g.Annotaton, Suite Test, Ignore Test, Exception Test, Timeout, Paramerized Test.
But there are a few more that aren't yet available in JUnit. And that's made the difference and testNG taken precedence over jUnit.

For example Dependency Test, Group Test which can categorize tests according to features such as run times, Parameterized(Object)

JUnit is designed to hone in on a unit of code, TestNG is meant for high-level testing. Its flexibility is especially useful with large test suites, where one test's failure shouldn't mean having to rerun a suite of thousands. 






What are the dependencies for this project?
The “Parameterized Test” means methods are test base on dependency, which will execute before a desired method. If the dependent method fails, then all subsequent tests will be skipped, not marked as failed.

JUnit framework is focus on test isolation; it did not support this feature at the moment.

TestNG use “dependOnMethods “ to implement the dependency testing as following

what is dependency injection in java?
A framework class, usually called the dependency container, could analyze the dependencies of this class. With this analysis it is able to create an instance of the class and inject the objects into the defined dependencies, via Java reflection.If dependency injection is used, a Java class can be tested in isolation.

What is static binding and dynamic binding?

1) Static binding in Java occurs during Compile time while Dynamic binding occurs during Runtime.

2) private, final and static methods and variables uses static binding and bonded by compiler while virtual methods are bonded during runtime based upon runtime object.

3) Static binding uses Type(Class in Java)  information for binding while Dynamic binding uses Object to resolve binding.

4)Overloaded methods are bonded using static binding while overridden methods are bonded using dynamic binding at runtime. .











